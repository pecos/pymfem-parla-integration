#!/bin/bash
#----------------------------------------------------
#   Script for multi-core CPU runs on 
#   TACC Frontera CLX nodes
#
#   *** Parallel Job in Small Queue***
# 
# Last revised: 28 December 2022
#
# Notes: This particular script builds the CPU version of
# PyMFEM.
#
#----------------------------------------------------

#SBATCH -J pymfem_cpu          # Job name
#SBATCH -o /scratch1/09047/was2489/pymfem_cpu.o%j      # Name of stdout output file (scratch user space)
#SBATCH -e /scratch1/09047/was2489/pymfem_cpu.e%j      # Name of stderr error file (scratch user space)
#SBATCH -p small           # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH --ntasks-per-node 1             # Total # of MPI tasks per node
#SBATCH -t 00:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY21005        # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=william.sands@austin.utexas.edu

# To use the conda environment and modules therein, we
# need to source the conda.sh file located in the user home space 
source ${HOME}/miniconda3/etc/profile.d/conda.sh

# Go to the directory of the project
cd ${WORK}/Projects/pymfem-parla-integration/code/PyMFEM

# Activate the Python environment
conda activate PyMFEM_env

# Note that we assume the modules needed are already installed
module purge
module load cmake/3.24.2
module load intel/19.1.1
module load impi/19.0.9
module load python3/3.7.0

# Clean the pre-existing build of PyMFEM before executing
python setup.py clean --all

# Now install the library with Intel compilers
#python setup.py install --CC=icc --CXX=icc 
python setup.py install --with-parallel --CC=icc --CXX=icc --MPICC=mpiicc --MPICXX=mpiicc

printf "\nFinished with the build!\n"
